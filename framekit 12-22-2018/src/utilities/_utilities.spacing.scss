
$fk-ns-space: 'space-' !default;
$fk-utils-spacing-responsive: true !default;
$fk-utils-spacing-important: true !default;
$fk-utils-spacing-breakpoints: get('web.breakpoints') !default;
$fk-utils-spacing-map: map('space') !default;

@mixin _utilities-spacing-groups( $variant: '') { 
    $important: null;  //local variable context
    @if($fk-utils-spacing-important){ $important: !important;}

    @each $type, $typesizes in $fk-utils-spacing-map {
        // have to ignore one level of map. Maybe restructure needed TKTK
        @if $type != 'spacing' {
            @each $size, $value in $typesizes {
                .#{$fk-ns-utilities + $fk-ns-space + $type}-#{$size+ $variant} { padding: $value $important;}
            }
         }
    }
} 

@mixin _utilities-spacing-units($variant: '') {
    $important: null;  //local variable context
    @if($fk-utils-spacing-important){ $important: !important;}

    @each $size, $value in map('space.spacing'){
        .#{$fk-ns-utilities + $fk-ns-space + $fk-abbr-padding + '-' + $size + $variant} { 
            padding: $value;
        }
        .#{$fk-ns-utilities + $fk-ns-space + $fk-abbr-margin + '-' + $size + $variant} { 
            margin: $value;
        }

        @each $edge, $sub in $fk-edges-map {
            .#{$fk-ns-utilities + $fk-ns-space + $fk-abbr-padding}#{$edge}-#{$size}{
                padding-#{map-get($fk-edges-map,$edge)}: $value $important;
            }

            .#{$fk-ns-utilities + $fk-ns-space + $fk-abbr-margin}#{$edge}-#{$size}{
                margin-#{map-get($fk-edges-map,$edge)}: $value $important;
            }
        }
    }
}
 
@include _utilities-spacing-groups;
@include _utilities-spacing-units;

@if ($fk-utils-spacing-responsive) {
    @each $breakpoint-name, $breakpoint-size in $fk-utils-spacing-breakpoints {
        @include mq-only($breakpoint-name){
            @include _utilities-spacing-groups($fk-ns-breakpoint-separator + $breakpoint-name);
            @include _utilities-spacing-units($fk-ns-breakpoint-separator + $breakpoint-name);
        }
    }
};




// TEMP DOC QA PUPROSES
// TKTK move qa to a ITCSS layer
// use same technique as _tools. layer to inject properly, but how connect it to local vars? 
@each $size, $value in map('space.spacing'){
    .#{$fk-ns-qa + $fk-ns-space + $size} { 
        box-shadow: inset #{$value} #{$value} 0 #c7dcbf, inset -#{$value} -#{$value} #c7dcbf;
    }

}

.#{$fk-ns-qa + $fk-ns-space}squish-xs { 
    box-shadow: inset 4px 2px #c7dcbf, inset -4px -2px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}squish-sm { 
    box-shadow: inset 8px 4px #c7dcbf, inset -8px -4px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}squish-md { 
    box-shadow: inset 16px 8px #c7dcbf, inset -16px -8px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}squish-lg { 
    box-shadow: inset 24px 8px #c7dcbf, inset -24px -8px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}squish-xl { 
    box-shadow: inset 32px 24px #c7dcbf, inset -32px -24px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}squish-xxl { 
    box-shadow: inset 64px 32px #c7dcbf, inset -64px -32px #c7dcbf;
}


// stretch qa's
.#{$fk-ns-qa + $fk-ns-space}stretch-sm { 
    box-shadow: inset 8px 4px #c7dcbf, inset -8px -4px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stretch-md { 
    box-shadow: inset 16px 8px #c7dcbf, inset -16px -8px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stretch-lg { 
    box-shadow: inset 24px 8px #c7dcbf, inset -24px -8px #c7dcbf;
}


//stackl
.#{$fk-ns-qa + $fk-ns-space}stack-xs { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -4px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stack-sm { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -8px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stack-md { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -16px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stack-lg { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -24px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stack-xl { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -32px #c7dcbf;
}

.#{$fk-ns-qa + $fk-ns-space}stack-xxl { 
    box-shadow: inset 0px 0px #c7dcbf, inset 0px -64px #c7dcbf;
}
