/*
   visible
*/

$fk-utils-visible-responsive: true !default;
$fk-utils-visible-print: true !default;

$fk-utils-visible-breakpoints: map('web.breakpoints') !default;

$fk-utilsvisible-ns: 'visible' !default; 

//if map based, add catagory, Type, Item location
//$fk-utils-visible-map: map('');


//Private function to include through looks and conditional statements
@mixin _visible($variant:'') {

   .#{$fk-ns-utilities}-hidden#{$variant}{
       display: none !important;
   }

   


}

// Putting this outside the mixin so its no injected with variants

// .#{$fk-ns-utilities}-

/* Visibility
 ========================================================================== */
 // hides but stays in DOM

 .#{$fk-ns-utilities}invisible { visibility: hidden !important; }





/* Visibility Toggle */

.#{$fk-ns-utilities}visible-toggle:not(:hover):not(.is-hover) .#{$fk-ns-utilities}hidden-hover:not(:focus) {
    position: absolute !important;
    width: 0 !important;
    height: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
    overflow: hidden !important;
}

/*
 * Invisible
 * Can't use `visibility: hidden` because it's not accessible through keyboard.
 */

 .#{$fk-ns-utilities}visible-toggle:not(:hover):not(.#{$fk-ns-utilities}hover) .#{$fk-ns-utilities}invisible-hover:not(:focus) { opacity: 0 !important; }
 

@if($fk-config-enable-utilties){
    @include _visible();
}

@if $fk-utils-visible-print AND $fk-config-enable-print {
    @media print {
        @include _visible($fk-ns-breakpoint-separator + $fk-ns-print);
    }
}

@if ($fk-utils-visible-responsive AND $fk-config-enable-responsive) {
    @each $breakpoint-name, $breakpoint-size in $fk-utils-visible-breakpoints {
        @include mq-only($breakpoint-name){
         //   @include _visible($fk-ns-breakpoint-separator + $breakpoint-name);
        }
    }
} 
