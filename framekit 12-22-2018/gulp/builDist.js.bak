const gulp = require('gulp'),
imagemin = require('gulp-imagemin')

// OPTIMIZE IMAGES ====== //
gulp.task('opt:images', () => {
  return gulp.src('')
  .pipe(imagemin([
    imagemin.gifsicle({interlaced: true}),
    imagemin.jpegtran({progressive: true}),
    imagemin.optipng({optimizationLevel: 5}),
    imagemin.svgo({
      plugins: [
        {removeViewBox: false},
        {cleanupIDs: false}
      ]
    })
  ]))
})


// COMPILE CSS ====== //
// LINT IT
gulp.task('lint-css', function lintCssTask() {
  return gulp
    .src('src/**/*.css')
    .pipe(gulpStylelint({
      fix: true,
      failAfterError: false,
      debug: true,
      reportOutputDir: 'reports/stylelint',
      reporters: [
        {formatter: 'verbose', console: true},
        {formatter: 'json', save: 'report.json'},
        {formatter: stylelintFormatter, save: 'stylelint.txt'}
      ],
      debug: true
    }));
});

// COMPILE IT
gulp.task('sass', function () {
  return gulp.src(['src/assets/scss/**/*.scss'], {
      base: 'src/assets/scss'
    })
    .pipe($.sourcemaps.init())
    .pipe($.sass.sync({
      precision: 10
    }).on('error', $.sass.logError))
    .pipe($.autoprefixer({
      browsers: ['last 2 versions'],
      remove: false
    }))
    .pipe($.sourcemaps.write('.'))
    .pipe(filelog())
    .pipe(gulp.dest('src/assets/css'))
    .pipe(browserSync.stream({
      match: '**/*.css'
    }))
})




// COMPILE JAVASCRIPT ====== //
gulp.task("default", function () {
  return gulp.src("src/**/*.js")
    .pipe(sourcemaps.init())
    .pipe(babel())
    .pipe(concat("all.js"))
    .pipe(sourcemaps.write("."))
    .pipe(gulp.dest("dist"));
});